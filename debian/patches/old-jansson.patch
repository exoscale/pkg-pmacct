Description: Support for Jansson 2.2.

Main goal for this patch is to be minimal. Therefore, there it's not
clean and it inserts the definition of json_object_update_missing() at
an arbitrary location.

Index: pmacct-1.5.2/src/pmacct.h
===================================================================
--- pmacct-1.5.2.orig/src/pmacct.h
+++ pmacct-1.5.2/src/pmacct.h
@@ -81,6 +81,10 @@
 #include <maxminddb.h>
 #endif
 
+#ifdef WITH_JANSSON
+#include <jansson.h>
+#endif
+
 #include "pmacct-build.h"
 
 #if !defined ETHER_ADDRSTRLEN
@@ -336,6 +340,10 @@ EXT struct child_ctl sql_writers;
 size_t strlcpy(char *, const char *, size_t);
 #endif
 
+#ifdef WITH_JANSSON
+int json_object_update_missing(json_t *, json_t *);
+#endif
+
 /* global variables */
 pcap_t *glob_pcapt;
 struct pcap_stat ps;
Index: pmacct-1.5.2/src/addr.c
===================================================================
--- pmacct-1.5.2.orig/src/addr.c
+++ pmacct-1.5.2/src/addr.c
@@ -635,3 +635,32 @@ void ipv4_mapped_to_ipv4(struct sockaddr
   sa4->sin_port = sa6->sin6_port;
 }
 #endif
+
+#ifdef WITH_JANSSON
+/* Totally unrelated, but this file is used by all executables. Easier
+ * to patch here. */
+int json_object_update_missing(json_t *object, json_t *other)
+{
+    void *iter;
+
+    if(!json_is_object(object) || !json_is_object(other))
+        return -1;
+
+    iter = json_object_iter(other);
+    while(iter) {
+        const char *key;
+        json_t *value;
+
+        key = json_object_iter_key(iter);
+        if(!json_object_get(object, key)) {
+            value = json_object_iter_value(iter);
+            if(json_object_set_nocheck(object, key, value))
+                return -1;
+        }
+
+        iter = json_object_iter_next(other, iter);
+    }
+
+    return 0;
+}
+#endif
